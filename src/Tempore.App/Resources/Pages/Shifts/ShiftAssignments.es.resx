<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="A new shift schedule will be created from the data entered in the form" xml:space="preserve">
    <value>Se creará una nueva planificación de turno a partir de los datos introducidos en el formulario</value>
  </data>
  <data name="Action" xml:space="preserve">
    <value>Acción</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Acciones</value>
  </data>
  <data name="An error occurred loading employees" xml:space="preserve">
    <value>Se produjo un error al cargar empleados.</value>
  </data>
  <data name="An error occurred loading employees from shift assignments" xml:space="preserve">
    <value>Un error ocurrió cargando los empleados desde las asignaciones de turnos</value>
  </data>
  <data name="An error occurred loading shift" xml:space="preserve">
    <value>Un error ocurrió cargando un turno</value>
  </data>
  <data name="An error occurred loading shift assignments" xml:space="preserve">
    <value>Un error ocurrió mientras se cargaban las asignaciones de turnos</value>
  </data>
  <data name="An error occurred unassign the employee" xml:space="preserve">
    <value>Ocurrió un error al desasignar al empleado</value>
  </data>
  <data name="An error occurred determining whether the daily planning process is running" xml:space="preserve">
    <value>A ocurrido un error al determinar si el proceso de planificación por día se está ejecutando</value>
  </data>
  <data name="An error occurred while assigning a shift to an employee" xml:space="preserve">
    <value>Un error ocurrió mientras se asignaba un turno a un empleado</value>
  </data>
  <data name="An error occurred while assigning a shift to an employee: {0}" xml:space="preserve">
    <value>Un error ocurrió mientras se asignaba un turno a un empleado : {0}</value>
  </data>
  <data name="An error occurred while creating the day's schedule" xml:space="preserve">
    <value>A ocurrido un error mientras se crea la planificación del día</value>
  </data>
  <data name="An error occurred while unassign employee" xml:space="preserve">
    <value>Un error ocurrió al cancelar la asignación del empleado</value>
  </data>
  <data name="Are you sure you want to unassign the employee '{0}'?" xml:space="preserve">
    <value>¿Está seguro de que desea desasignar al empleado '{0}'?</value>
  </data>
  <data name="Are you sure you want to unassign the employees?" xml:space="preserve">
    <value>¿Está seguro de que desea desasignar a los empleados?</value>
  </data>
  <data name="Assign" xml:space="preserve">
    <value>Asignar</value>
  </data>
  <data name="Assigned" xml:space="preserve">
    <value>Asignado</value>
  </data>
  <data name="Assigned employees to shift" xml:space="preserve">
    <value>Empleados asignados al turno</value>
  </data>
  <data name="Compute metrics" xml:space="preserve">
    <value>Calcular métricas</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Crear</value>
  </data>
  <data name="Create new assignment" xml:space="preserve">
    <value>Crear nueva asignación</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>Dia</value>
  </data>
  <data name="Display none" xml:space="preserve">
    <value>Mostrar ninguno</value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>Duración</value>
  </data>
  <data name="Effective working hours" xml:space="preserve">
    <value>Horas efectivas de trabajo</value>
  </data>
  <data name="Effective working time" xml:space="preserve">
    <value>Tiempo efectivo de trabajo</value>
  </data>
  <data name="Employees" xml:space="preserve">
    <value>Empleados</value>
  </data>
  <data name="Employees count" xml:space="preserve">
    <value>Cantidad de empleados</value>
  </data>
  <data name="Expire date" xml:space="preserve">
    <value>Fecha de expiración</value>
  </data>
  <data name="Expires" xml:space="preserve">
    <value>Vence</value>
  </data>
  <data name="Filter by keyword" xml:space="preserve">
    <value>Filtrar por palabra clave</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>Desde</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Inicio</value>
  </data>
  <data name="hours" xml:space="preserve">
    <value>horas</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="Not" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Planned shifts" xml:space="preserve">
    <value>Turnos planificados</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Actualizar</value>
  </data>
  <data name="Schedule" xml:space="preserve">
    <value>Planificar</value>
  </data>
  <data name="Schedule days" xml:space="preserve">
    <value>Planificar días</value>
  </data>
  <data name="Schedule days (override)" xml:space="preserve">
    <value>Planificar días (sobreescribir)</value>
  </data>
  <data name="Select a shift assignment if you want to filter employees assigned or unassigned to that shift assignment." xml:space="preserve">
    <value>Seleccione una asignación de turno en caso que desee filtrar los empleados asignados o no asignados a dicha asignación de turno.</value>
  </data>
  <data name="Select at least one employee in case you want to assign them to a shift." xml:space="preserve">
    <value>Seleccione al menos un empleado en caso que desee asignarlo a un turno.</value>
  </data>
  <data name="Scheduling days" xml:space="preserve">
    <value>Programando días</value>
  </data>
  <data name="Select state" xml:space="preserve">
    <value>Seleccionar estado</value>
  </data>
  <data name="Shift assignment selected" xml:space="preserve">
    <value>Asignación de turno seleccionada</value>
  </data>
  <data name="Shift assignments" xml:space="preserve">
    <value>Asignaciones de turnos</value>
  </data>
  <data name="Shift planning has been selected" xml:space="preserve">
    <value>Se ha seleccionado la planificación de turnos</value>
  </data>
  <data name="Shift planning has been selected {0} ⇒ {1} with effective working time of {2} hours. Select at least one employee in case you want to assign them to a shift." xml:space="preserve">
    <value>Se ha seleccionado la planificación de turnos {0} ⇒ {1} con un tiempo de trabajo efectivo de {2} horas. Seleccione al menos un empleado en caso que desee asignarlo a un turno.</value>
  </data>
  <data name="Shows a list of available employees to be assigned to the shift" xml:space="preserve">
    <value>Muestra los empleados disponibles para ser asignados al turno</value>
  </data>
  <data name="Shows a list of shift assignments for this shift" xml:space="preserve">
    <value>Muestra una lista de asignaciones para este turno</value>
  </data>
  <data name="Shows a list of timetables for this shift" xml:space="preserve">
    <value>Muestra los horarios para este turno</value>
  </data>
  <data name="Start date" xml:space="preserve">
    <value>Fecha de inicio</value>
  </data>
  <data name="Start time" xml:space="preserve">
    <value>Hora de inicio</value>
  </data>
  <data name="Successful assignment of employee(s) to the shift" xml:space="preserve">
    <value>Satisfactoria asignacion de empleado(s) al turno</value>
  </data>
  <data name="Successfully created day plan" xml:space="preserve">
    <value>Planificación del día creada satisfactoriamente</value>
  </data>
  <data name="Time &amp; attendance" xml:space="preserve">
    <value>Tiempo y asistencia</value>
  </data>
  <data name="Timetables" xml:space="preserve">
    <value>Horarios</value>
  </data>
  <data name="Unassign" xml:space="preserve">
    <value>Desasignar</value>
  </data>
  <data name="Unassign created successfully" xml:space="preserve">
    <value>Desasignar creado exitosamente</value>
  </data>
  <data name="Unassigned" xml:space="preserve">
    <value>No asignado</value>
  </data>
  <data name="with" xml:space="preserve">
    <value>con</value>
  </data>
  <data name="with effective working time of" xml:space="preserve">
    <value>con tiempo efectivo de trabajo de</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Sí</value>
  </data>
  <data name="{0} with effective working time of {1} hours." xml:space="preserve">
    <value>{0} con tiempo de trabajo efectivo de {1} horas.</value>
  </data>
  <data name="Scheduled shifts for employees are displayed." xml:space="preserve">
    <value>Se muestran los turnos programados para los empleados.</value>
  </data>
</root>