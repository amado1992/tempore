@using Blorc.Attributes
@using Tempore.App.Components

@inherits Blorc.Components.BlorcComponentBase

<PageTitle>@StringLocalizer?["Preview_File_Title"]</PageTitle>
@{
    var items = new List<BreadcrumbItem>
                    {
                        new(StringLocalizer!["Home"], Routes.Home.Index),
                        new(StringLocalizer["File Processing"], null, true),
                        new(StringLocalizer["Import File"], Routes.Employees.ImportFromFiles.ImportFromFile),
                        new(StringLocalizer["Preview File"], null, true),
                    };
}

<MudBreadcrumbs Items="items" Style="margin-left: -10px" />
<MudText Typo="Typo.h5">@StringLocalizer["Preview File"]</MudText>
<MudText Typo="Typo.caption">@StringLocalizer["Displays a list of employees contained in the file."]</MudText>

@if (Columns is not null)
{
    <MudTable Class="mt-2" T="IDictionary<string, string>" ServerData="GetFileDataAsync" Dense="true" Hover="true" @ref="fileContentTable">
        <ToolBarContent>
            <HeaderDescription Icon=@Icons.Material.Filled.Preview ContentText=@StringLocalizer["Preview File"] />
            <MudSpacer />
        </ToolBarContent>
        <HeaderContent>
            @foreach (var column in Columns)
            {
                <MudTh>@column</MudTh>
            }
        </HeaderContent>
        <RowTemplate>
            @foreach (var key in context.Keys)
            {
                <MudTd DataLabel="key">@context[key]</MudTd>
            }
        </RowTemplate>
        <PagerContent>
            <MudTablePager HideRowsPerPage="true" InfoFormat="{first_item}-{last_item} / {all_items}" />
        </PagerContent>
    </MudTable>
}

@code {
    [InjectComponentService(nameof(FileContentTableComponentService))]
    private MudTable<IDictionary<string, string>>? fileContentTable;
}
