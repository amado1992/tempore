<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="A new shift schedule will be created from the data entered in the form" xml:space="preserve">
    <value>A new shift schedule will be created from the data entered in the form</value>
  </data>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="An error occurred loading employees" xml:space="preserve">
    <value>An error occurred loading employees</value>
  </data>
  <data name="An error occurred loading employees from shift assignments" xml:space="preserve">
    <value>An error occurred loading employees from shift assignments</value>
  </data>
  <data name="An error occurred loading shift" xml:space="preserve">
    <value>An error occurred loading shift</value>
  </data>
  <data name="An error occurred loading shift assignments" xml:space="preserve">
    <value>An error occurred loading shift assignments</value>
  </data>
  <data name="An error occurred unassign the employee" xml:space="preserve">
    <value>An error occurred unassign the employee</value>
  </data>
  <data name="An error occurred determining whether the daily planning process is running" xml:space="preserve">
    <value>An error occurred determining whether the daily planning process is running</value>
  </data>
  <data name="An error occurred while assigning a shift to an employee" xml:space="preserve">
    <value>An error occurred while assigning a shift to an employee</value>
  </data>
  <data name="An error occurred while assigning a shift to an employee: {0}" xml:space="preserve">
    <value>An error occurred while assigning a shift to an employee: {0}</value>
  </data>
  <data name="An error occurred while creating the day's schedule" xml:space="preserve">
    <value>An error occurred while creating the day's schedule</value>
  </data>
  <data name="An error occurred while unassign employee" xml:space="preserve">
    <value>An error occurred while unassign employee</value>
  </data>
  <data name="Are you sure you want to unassign the employee '{0}'?" xml:space="preserve">
    <value>Are you sure you want to unassign the employee '{0}'?</value>
  </data>
  <data name="Are you sure you want to unassign the employees?" xml:space="preserve">
    <value>Are you sure you want to unassign the employees?</value>
  </data>
  <data name="Assign" xml:space="preserve">
    <value>Assign</value>
  </data>
  <data name="Assigned" xml:space="preserve">
    <value>Assigned</value>
  </data>
  <data name="Assigned employees to shift" xml:space="preserve">
    <value>Assigned employees to shift</value>
  </data>
  <data name="Compute metrics" xml:space="preserve">
    <value>Compute metrics</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Create new assignment" xml:space="preserve">
    <value>Create new assignment</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="Display none" xml:space="preserve">
    <value>Display none</value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="Effective working hours" xml:space="preserve">
    <value>Effective working hours</value>
  </data>
  <data name="Effective working time" xml:space="preserve">
    <value>Effective working time</value>
  </data>
  <data name="Employees" xml:space="preserve">
    <value>Employees</value>
  </data>
  <data name="Employees count" xml:space="preserve">
    <value>Employees count</value>
  </data>
  <data name="Expire date" xml:space="preserve">
    <value>Expire date</value>
  </data>
  <data name="Expires" xml:space="preserve">
    <value>Expires</value>
  </data>
  <data name="Filter by keyword" xml:space="preserve">
    <value>Filter by keyword</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="hours" xml:space="preserve">
    <value>hours</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Not" xml:space="preserve">
    <value>Not</value>
  </data>
  <data name="Planned shifts" xml:space="preserve">
    <value>Planned shifts</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="Schedule" xml:space="preserve">
    <value>Schedule</value>
  </data>
  <data name="Schedule days" xml:space="preserve">
    <value>Schedule days</value>
  </data>
  <data name="Schedule days (override)" xml:space="preserve">
    <value>Schedule days (override)</value>
  </data>
  <data name="Select a shift assignment if you want to filter employees assigned or unassigned to that shift assignment." xml:space="preserve">
    <value>Select a shift assignment if you want to filter employees assigned or unassigned to that shift assignment.</value>
  </data>
  <data name="Select at least one employee in case you want to assign them to a shift." xml:space="preserve">
    <value>Select at least one employee in case you want to assign them to a shift.</value>
  </data>
  <data name="Scheduling days" xml:space="preserve">
    <value>Scheduling days</value>
  </data>
  <data name="Select state" xml:space="preserve">
    <value>Select state</value>
  </data>
  <data name="Shift assignment selected" xml:space="preserve">
    <value>Shift assignment selected</value>
  </data>
  <data name="Shift assignments" xml:space="preserve">
    <value>Shift assignments</value>
  </data>
  <data name="Shift planning has been selected" xml:space="preserve">
    <value>Shift planning has been selected</value>
  </data>
  <data name="Shift planning has been selected {0} ⇒ {1} with effective working time of {2} hours. Select at least one employee in case you want to assign them to a shift." xml:space="preserve">
    <value>Shift planning has been selected {0} ⇒ {1} with effective working time of {2} hours. Select at least one employee in case you want to assign them to a shift.</value>
  </data>
  <data name="Shows a list of available employees to be assigned to the shift" xml:space="preserve">
    <value>Shows a list of available employees to be assigned to the shift</value>
  </data>
  <data name="Shows a list of shift assignments for this shift" xml:space="preserve">
    <value>Shows a list of shift assignments for this shift</value>
  </data>
  <data name="Shows a list of timetables for this shift" xml:space="preserve">
    <value>Shows a list of timetables for this shift</value>
  </data>
  <data name="Start date" xml:space="preserve">
    <value>Start date</value>
  </data>
  <data name="Start time" xml:space="preserve">
    <value>Start time</value>
  </data>
  <data name="Successful assignment of employee(s) to the shift" xml:space="preserve">
    <value>Successful assignment of employee(s) to the shift</value>
  </data>
  <data name="Successfully created day plan" xml:space="preserve">
    <value>Successfully created day plan</value>
  </data>
  <data name="Time &amp; attendance" xml:space="preserve">
    <value>Time &amp; attendance</value>
  </data>
  <data name="Timetables" xml:space="preserve">
    <value>Timetables</value>
  </data>
  <data name="Unassign" xml:space="preserve">
    <value>Unassign</value>
  </data>
  <data name="Unassign created successfully" xml:space="preserve">
    <value>Unassign created successfully</value>
  </data>
  <data name="Unassigned" xml:space="preserve">
    <value>Unassigned</value>
  </data>
  <data name="with" xml:space="preserve">
    <value>with</value>
  </data>
  <data name="with effective working time of" xml:space="preserve">
    <value>with effective working time of</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="{0} with effective working time of {1} hours." xml:space="preserve">
    <value>{0} with effective working time of {1} hours.</value>
  </data>
  <data name="Scheduled shifts for employees are displayed." xml:space="preserve">
    <value>Scheduled shifts for employees are displayed.</value>
  </data>
</root>